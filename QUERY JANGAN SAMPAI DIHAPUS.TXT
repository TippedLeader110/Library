VIEW PINJAM (untuk data pinjam)
create or replace view pinjam as 
select d.id_transaksi, c.isbn, c.judul, a.nis, a.nama as siswa, a.tingkat, a.jurusan, a.kelas, b.id_petugas, b.nama as petugas, d.t_pinjam, d.t_kembali, d.denda
from pinjam_book d 
inner join siswa_view a on a.nis = d.nis
inner join petugas b on b.id_petugas = d.id_petugas
inner join book c on c.isbn = d.isbn; 


-------------------------------------------------------

VIEW KEMBALI
create or replace view kembali as 
select d.id_transaksi, c.isbn, c.judul, a.nis, a.nama, d.t_pinjam, d.t_kembali, d.t_deadline 
from pinjam_book d 
inner join siswa a on a.nis = d.nis 
inner join book c on c.isbn = d.isbn;

-------------------------------------------------------

FUNCTION DENDA
create or replace function denda (date1 date, id int(11), id_trans int(11), uang int(11))
returns int 
begin
declare date2 date;
declare b int;
Select t_deadline from pinjam_book where id_anggota = id and id_transaksi = id_trans into date2;
if day(date1) > day(date2) then
set b = (day(date1) - day(date2)) * uang;
else
set b = 0;
end if;
return b;
end!

-------------------------------------------------------




-------------------------------------------------------

TRIGGER PEMINJAMAN
CREATE TRIGGER peminjaman after INSERT ON pinjam_book
FOR EACH ROW BEGIN
if exists(select t_pinjam from pinjam_book where id_transaksi = new.id_transaksi and t_pinjam is not null) then
UPDATE book
SET jmlh = jmlh - 1
WHERE
isbn = NEW.isbn;
END!
-------------------------------------------------------

TRIGGER PENGEMBALIAN
CREATE TRIGGER pengembalian after update ON pinjam_book
FOR EACH ROW BEGIN
if exists(select t_kembali from pinjam_book where id_transaksi = new.id_transaksi and t_kembali is not null)
UPDATE book
SET jmlh = jumlh + 1
WHERE
isbn = NEW.isbn;
END!

------------------------------------------------------- 

VIEW BUKU 
create or replace view buku as 
select a.isbn, b.lokasi, a.penerbit, a.pengarang, a.thn_buku, a.jmlh, a.tgl_pengadaan, a.judul, a.jenis_buku, a.kategori
from book a 
inner join lok_book b on a.id_rak = b.id_rak;

-------------------------------------------------------

TRIGGER insert_lokasi
CREATE TRIGGER insert_lokasi after insert ON book
FOR EACH ROW BEGIN
declare lks text;
select concat('rak ',left(new.id_rak,1),' tingkat ',right(new.id_rak,1)) into lks;
if not exists (select id_rak from lok_book where id_rak = new.id_rak) then
insert into lok_book (id_rak, lokasi) 
values (new.id_rak, lks);
end if;
END!

-------------------------------------------------------
	
TRIGGER insert_lokasi2
CREATE TRIGGER insert_lokasi2 after update ON book
FOR EACH ROW BEGIN
declare lks text;
select concat('rak ',left(new.id_rak,1),' tingkat ',right(new.id_rak,1)) into lks;
if not exists (select id_rak from lok_book where id_rak = new.id_rak) then
insert into lok_book (id_rak, lokasi) 
values (new.id_rak, lks);
end if;
END!

-------------------------------------------------------

VIEW SISWA_VIEW
create or replace view siswa_view as 
select a.nis, a.nama, b.tingkat, b.jurusan, b.kelas, a.alamat, a.no_telp
from siswa a
inner join kelas b on a.id_kelas = b.id_kelas;

-------------------------------------------------------